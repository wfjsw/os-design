[package]
name = "bootloader"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
cortex-m = { version = "0.7.4", features = ["inline-asm"] }
cortex-m-rt = { version = "0.7.1", features = ["device"] }
cortex-m-semihosting = "0.3.3"
panic-halt = "0.2.0"
panic-semihosting = { version = "0.5.6", features = ["exit"] }
embedded-hal = "0.2.6"
usb-device = "0.2.8"
usbd-hid = "0.5.2"
lazy_static = { version = "1.4.0", features = ["spin_no_std"] }

# Uncomment for the allocator example.
# alloc-cortex-m = "0.4.0"

[dependencies.stm32f1xx-hal]
version = "0.8.0"
features = ["rt", "stm32f103", "high", "stm32-usbd"]

# this lets you use `cargo fix`!
[[bin]]
name = "bootloader"
test = false
bench = false

[profile.dev]
lto = true # better optimizations
opt-level = "s" # better optimizations

[profile.release]
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size on Flash
lto = true # better optimizations
opt-level = "s" # better optimizations
